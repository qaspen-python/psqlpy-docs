import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,a as e}from"./app-gObj4Itx.js";const t={},p=e(`<p><code>Results</code> are objects that driver returns to python with some data inside.</p><p>Currently there are two results:</p><ul><li><code>QueryResult</code> - for result with multiple rows</li><li><code>SingleQueryResult</code> - for result with exactly one row</li></ul><h2 id="queryresult-methods" tabindex="-1"><a class="header-anchor" href="#queryresult-methods"><span>QueryResult methods</span></a></h2><h3 id="result" tabindex="-1"><a class="header-anchor" href="#result"><span>Result</span></a></h3><p>Get the result as a list of dicts</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> PSQLPool<span class="token punctuation">(</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    query_result<span class="token punctuation">:</span> QueryResult <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT username FROM users&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    result<span class="token punctuation">:</span> List<span class="token punctuation">[</span>Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> query_result<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="as-class" tabindex="-1"><a class="header-anchor" href="#as-class"><span>As class</span></a></h3><p>Get the result as a list of passed class instances</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ExampleOfAsClass</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> PSQLPool<span class="token punctuation">(</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    query_result<span class="token punctuation">:</span> QueryResult <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT username FROM users&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    class_results<span class="token punctuation">:</span> List<span class="token punctuation">[</span>ExampleOfAsClass<span class="token punctuation">]</span> <span class="token operator">=</span> query_result<span class="token punctuation">.</span>as_class<span class="token punctuation">(</span>
        as_class<span class="token operator">=</span>ExampleOfAsClass<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="singlequeryresult-methods" tabindex="-1"><a class="header-anchor" href="#singlequeryresult-methods"><span>SingleQueryResult methods</span></a></h2><h3 id="result-1" tabindex="-1"><a class="header-anchor" href="#result-1"><span>Result</span></a></h3><p>Get the result as a dict</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> PSQLPool<span class="token punctuation">(</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    query_result<span class="token punctuation">:</span> SingleQueryResult <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>fetch_row<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT username FROM users WHERE id = $1&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    result<span class="token punctuation">:</span> Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span> <span class="token operator">=</span> query_result<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="as-class-1" tabindex="-1"><a class="header-anchor" href="#as-class-1"><span>As class</span></a></h3><p>Get the result as a passed class instance.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ExampleOfAsClass</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> PSQLPool<span class="token punctuation">(</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    query_result<span class="token punctuation">:</span> SingleQueryResult <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span>fetch_row<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT username FROM users WHERE id = $1&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    class_results<span class="token punctuation">:</span> ExampleOfAsClass <span class="token operator">=</span> query_result<span class="token punctuation">.</span>as_class<span class="token punctuation">(</span>
        as_class<span class="token operator">=</span>ExampleOfAsClass<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[p];function l(c,i){return n(),a("div",null,o)}const d=s(t,[["render",l],["__file","results.html.vue"]]),k=JSON.parse('{"path":"/introduction/components/results.html","title":"Results","lang":"en-US","frontmatter":{"title":"Results","description":"Results are objects that driver returns to python with some data inside. Currently there are two results: QueryResult - for result with multiple rows SingleQueryResult - for res...","head":[["meta",{"property":"og:url","content":"https://github.com/qaspen-python/psqlpy/psqlpy-docs/introduction/components/results.html"}],["meta",{"property":"og:title","content":"Results"}],["meta",{"property":"og:description","content":"Results are objects that driver returns to python with some data inside. Currently there are two results: QueryResult - for result with multiple rows SingleQueryResult - for res..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-20T20:14:59.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-20T20:14:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Results\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-20T20:14:59.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"QueryResult methods","slug":"queryresult-methods","link":"#queryresult-methods","children":[{"level":3,"title":"Result","slug":"result","link":"#result","children":[]},{"level":3,"title":"As class","slug":"as-class","link":"#as-class","children":[]}]},{"level":2,"title":"SingleQueryResult methods","slug":"singlequeryresult-methods","link":"#singlequeryresult-methods","children":[{"level":3,"title":"Result","slug":"result-1","link":"#result-1","children":[]},{"level":3,"title":"As class","slug":"as-class-1","link":"#as-class-1","children":[]}]}],"git":{"createdTime":1710965243000,"updatedTime":1710965699000,"contributors":[{"name":"reqww","email":"my.gurbanov@gmail.com","commits":2}]},"readingTime":{"minutes":0.65,"words":196},"filePathRelative":"introduction/components/results.md","localizedDate":"March 20, 2024","autoDesc":true}');export{d as comp,k as data};
