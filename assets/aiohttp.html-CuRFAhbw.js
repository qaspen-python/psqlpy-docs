import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-B1dJEowR.js";const e={},o=t(`<p>There is the default example for <code>AioHTTP</code> framework.</p><p>We strongly recommend to use the following example as a standard way to use <code>PSQLPy</code> with <code>AioHTTP</code> framework.</p><h2 id="complete-example" tabindex="-1"><a class="header-anchor" href="#complete-example"><span>Complete example</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># Start example</span>
<span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> typing <span class="token keyword">import</span> cast
<span class="token keyword">from</span> aiohttp <span class="token keyword">import</span> web
<span class="token keyword">from</span> psqlpy <span class="token keyword">import</span> PSQLPool


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">start_db_pool</span><span class="token punctuation">(</span>app<span class="token punctuation">:</span> web<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Initialize database connection pool.&quot;&quot;&quot;</span>
    db_pool <span class="token operator">=</span> PSQLPool<span class="token punctuation">(</span>
        dsn<span class="token operator">=</span><span class="token string">&quot;postgres://postgres:postgres@localhost:5432/postgres&quot;</span><span class="token punctuation">,</span>
        max_db_pool_size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    app<span class="token punctuation">[</span><span class="token string">&quot;db_pool&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> db_pool


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">stop_db_pool</span><span class="token punctuation">(</span>app<span class="token punctuation">:</span> web<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Close database connection pool.&quot;&quot;&quot;</span>
    db_pool <span class="token operator">=</span> cast<span class="token punctuation">(</span>PSQLPool<span class="token punctuation">,</span> app<span class="token punctuation">.</span>db_pool<span class="token punctuation">)</span>
    <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">pg_pool_example</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> web<span class="token punctuation">.</span>Request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    db_pool <span class="token operator">=</span> cast<span class="token punctuation">(</span>PSQLPool<span class="token punctuation">,</span> request<span class="token punctuation">.</span>app<span class="token punctuation">[</span><span class="token string">&quot;db_pool&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    query_result <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT * FROM users&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    dict_result <span class="token operator">=</span> query_result<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> web<span class="token punctuation">.</span>json_response<span class="token punctuation">(</span>
        data<span class="token operator">=</span>dict_result<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>


application <span class="token operator">=</span> web<span class="token punctuation">.</span>Application<span class="token punctuation">(</span><span class="token punctuation">)</span>
application<span class="token punctuation">.</span>on_startup<span class="token punctuation">.</span>append<span class="token punctuation">(</span>start_db_pool<span class="token punctuation">)</span>
application<span class="token punctuation">.</span>add_routes<span class="token punctuation">(</span><span class="token punctuation">[</span>web<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> pg_pool_example<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    web<span class="token punctuation">.</span>run_app<span class="token punctuation">(</span>application<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),p=[o];function i(l,c){return s(),a("div",null,p)}const d=n(e,[["render",i],["__file","aiohttp.html.vue"]]),k=JSON.parse('{"path":"/usage/aiohttp.html","title":"AioHTTP Usage","lang":"en-US","frontmatter":{"title":"AioHTTP Usage","description":"There is the default example for AioHTTP framework. We strongly recommend to use the following example as a standard way to use PSQLPy with AioHTTP framework. Complete example","head":[["meta",{"property":"og:url","content":"https://github.com/qaspen-python/psqlpy/psqlpy-docs/usage/aiohttp.html"}],["meta",{"property":"og:title","content":"AioHTTP Usage"}],["meta",{"property":"og:description","content":"There is the default example for AioHTTP framework. We strongly recommend to use the following example as a standard way to use PSQLPy with AioHTTP framework. Complete example"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-20T20:07:23.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-20T20:07:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AioHTTP Usage\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-20T20:07:23.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Complete example","slug":"complete-example","link":"#complete-example","children":[]}],"git":{"createdTime":1710552901000,"updatedTime":1710965243000,"contributors":[{"name":"chandr-andr (Kiselev Aleksandr)","email":"askiselev00@gmail.com","commits":1},{"name":"reqww","email":"my.gurbanov@gmail.com","commits":1}]},"readingTime":{"minutes":0.42,"words":127},"filePathRelative":"usage/aiohttp.md","localizedDate":"March 16, 2024","autoDesc":true}');export{d as comp,k as data};
