import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,a as e}from"./app-HnDRfd25.js";const o={},t=e(`<p>Connection pool is the main object in the library. It initializes, creates, holds and gives connection to the user side.<br> Connection pool must be started up before any other operations.</p><h2 id="connection-pool-methods" tabindex="-1"><a class="header-anchor" href="#connection-pool-methods"><span>Connection pool methods</span></a></h2><h3 id="all-available-psqlpool-parameters" tabindex="-1"><a class="header-anchor" href="#all-available-psqlpool-parameters"><span>All available PSQLPool parameters</span></a></h3><ul><li><code>dsn</code>: connection string with <code>postgres</code>/<code>postgresql</code> schema.</li><li><code>username</code>: name of the <code>PostgreSQL</code> user.</li><li><code>password</code>: password of the <code>PostgreSQL</code> user.</li><li><code>host</code>: host of the <code>PostgreSQL</code>.</li><li><code>port</code>: port of the <code>PostgreSQL</code>.</li><li><code>db_name</code>: database name in the <code>PostgreSQL</code>.</li><li><code>max_db_pool_size</code>: maximum size for the connection pool. Minimal and default = 2</li><li><code>conn_recycling_method</code>: how a connection is recycled.</li></ul><div class="hint-container important"><p class="hint-container-title">Important</p><p>If <code>dsn</code> is specified then other connection parameters don&#39;t have any effect.</p></div><h3 id="initialize-database-pool-with-separate-parameters" tabindex="-1"><a class="header-anchor" href="#initialize-database-pool-with-separate-parameters"><span>Initialize Database Pool with separate parameters</span></a></h3><p>There are two ways of how to connect to the database. First one is use connection parameters separately:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Final

<span class="token keyword">from</span> psqlpy <span class="token keyword">import</span> PSQLPool

db_pool<span class="token punctuation">:</span> Final <span class="token operator">=</span> PSQLPool<span class="token punctuation">(</span>
    username<span class="token operator">=</span><span class="token string">&quot;postgres&quot;</span><span class="token punctuation">,</span>
    password<span class="token operator">=</span><span class="token string">&quot;postgres&quot;</span><span class="token punctuation">,</span>
    host<span class="token operator">=</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
    port<span class="token operator">=</span><span class="token number">5432</span><span class="token punctuation">,</span>
    db_name<span class="token operator">=</span><span class="token string">&quot;postgres&quot;</span><span class="token punctuation">,</span>
    max_db_pool_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>startup<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="initialize-database-pool-with-dsn" tabindex="-1"><a class="header-anchor" href="#initialize-database-pool-with-dsn"><span>Initialize Database Pool with DSN</span></a></h3><p>Other way is use DSN:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Final

<span class="token keyword">from</span> psqlpy <span class="token keyword">import</span> PSQLPool

db_pool<span class="token punctuation">:</span> Final <span class="token operator">=</span> PSQLPool<span class="token punctuation">(</span>
    dsn<span class="token operator">=</span><span class="token string">&quot;postgres://postgres:postgres@localhost:5432/postgres&quot;</span><span class="token punctuation">,</span>
    max_db_pool_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>startup<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="execute" tabindex="-1"><a class="header-anchor" href="#execute"><span>Execute</span></a></h3><p>You can execute any query directly from Connection Pool.<br> This method supports parameters, each parameter must be marked as <code>$&lt;number&gt;</code> (number starts with 1).<br> Parameters must be passed as list after querystring.</p><div class="hint-container caution"><p class="hint-container-title">Caution</p><p>You must not use <code>PSQLPool.execute</code> method in high-load production code!<br> It pulls connection from the pool each time you call <code>execute</code> method and it&#39;s necessary to block connection pool (like Mutex) which means no one other thread can not acquire connection pool.<br> In you high-load production code you must retrieve connection from the pool <code>PSQLPool.connection</code> and use it for querying.</p></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    results<span class="token punctuation">:</span> QueryResult <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
        <span class="token string">&quot;SELECT * FROM users WHERE id = $1 and username = $2&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;Alex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    dict_results<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> results<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connection" tabindex="-1"><a class="header-anchor" href="#connection"><span>Connection</span></a></h3><p>To get single connection from the <code>PSQLPool</code> there is method named <code>connection()</code>.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    connection <span class="token operator">=</span> <span class="token keyword">await</span> db_pool<span class="token punctuation">.</span>connection<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Cool tip</p><p>This is the preferable way to work with the PostgreSQL.</p></div>`,19),i=[t];function p(c,l){return a(),s("div",null,i)}const u=n(o,[["render",p],["__file","connection_pool.html.vue"]]),m=JSON.parse('{"path":"/introduction/components/connection_pool.html","title":"Connection Pool","lang":"en-US","frontmatter":{"title":"Connection Pool","description":"Connection pool is the main object in the library. It initializes, creates, holds and gives connection to the user side. Connection pool must be started up before any other oper...","head":[["meta",{"property":"og:url","content":"https://github.com/qaspen-python/psqlpy/psqlpy-docs/introduction/components/connection_pool.html"}],["meta",{"property":"og:title","content":"Connection Pool"}],["meta",{"property":"og:description","content":"Connection pool is the main object in the library. It initializes, creates, holds and gives connection to the user side. Connection pool must be started up before any other oper..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-11T18:45:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-11T18:45:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Connection Pool\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-11T18:45:56.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Connection pool methods","slug":"connection-pool-methods","link":"#connection-pool-methods","children":[{"level":3,"title":"All available PSQLPool parameters","slug":"all-available-psqlpool-parameters","link":"#all-available-psqlpool-parameters","children":[]},{"level":3,"title":"Initialize Database Pool with separate parameters","slug":"initialize-database-pool-with-separate-parameters","link":"#initialize-database-pool-with-separate-parameters","children":[]},{"level":3,"title":"Initialize Database Pool with DSN","slug":"initialize-database-pool-with-dsn","link":"#initialize-database-pool-with-dsn","children":[]},{"level":3,"title":"Execute","slug":"execute","link":"#execute","children":[]},{"level":3,"title":"Connection","slug":"connection","link":"#connection","children":[]}]}],"git":{"createdTime":1710182756000,"updatedTime":1710182756000,"contributors":[{"name":"chandr-andr (Kiselev Aleksandr)","email":"askiselev00@gmail.com","commits":1}]},"readingTime":{"minutes":1.21,"words":364},"filePathRelative":"introduction/components/connection_pool.md","localizedDate":"March 11, 2024","autoDesc":true}');export{u as comp,m as data};
